#!/usr/bin/env python3
"""
TABLEAU FINAL CHARGES R√âELLES - AO√õT 2025
Bas√© sur l'analyse Qonto et corrections utilisateur
"""

from datetime import datetime
from tabulate import tabulate

def afficher_tableau_charges():
    """Affiche le tableau complet des charges mensuelles r√©elles"""
    
    print("\n" + "="*80)
    print("üìä TABLEAU CHARGES MENSUELLES R√âELLES - SYAGA CONSULTING")
    print(f"üìÖ Mise √† jour: {datetime.now().strftime('%d/%m/%Y')}")
    print("="*80)
    
    # D√©finir les charges
    charges = [
        ["SALAIRES & CHARGES", "", ""],
        ["URSSAF (avec rattrapage)", 3700, "Normal: 2,591‚Ç¨ apr√®s ao√ªt"],
        ["Romain BASTIEN", 2650, "Salaire net"],
        ["Hugo JOUCLA", 2250, "Salaire net"],
        ["", "", ""],
        ["IMMOBILIER", "", ""],
        ["Loyer QSSP", 900, "Bureau"],
        ["Loyer CAGNES", 100, "Stockage"],
        ["", "", ""],
        ["FINANCEMENTS", "", ""],
        ["Pr√™t Riverbank", 1618, "‚ùå Fin 31/08/2025"],
        ["DIAC", 586, "V√©hicule"],
        ["", "", ""],
        ["SERVICES IT", "", ""],
        ["VillaData", 1260, "Infrastructure"],
        ["", "", ""],
        ["ASSURANCES", "", ""],
        ["SwissLife Pr√©voyance", 132, ""],
        ["SwissLife Retraite", 507, "254+253"],
        ["SwissLife Biens", 51, ""],
        ["Hiscox RC Pro", 120, ""],
        ["", "", ""],
        ["T√âL√âCOMS", "", ""],
        ["Orange", 110, "Fibre pro"],
        ["Free Mobile", 30, "2x15‚Ç¨ + 1x2‚Ç¨"],
        ["Freebox", 45, "Box internet"],
        ["OVH", 8, "H√©bergement"],
        ["", "", ""],
        ["SERVICES", "", ""],
        ["Microsoft 365", 24, ""],
        ["Roole", 15, "G√©olocalisation"],
        ["", "", ""],
        ["COMPTABILIT√â", "", ""],
        ["DOUGS", 340, "Expert-comptable"],
        ["", "", ""],
        ["TRANSPORT", "", ""],
        ["Essence", 103, "1.5 pleins/mois"],
    ]
    
    # Calculer totaux
    total_charges = sum(c[1] for c in charges if isinstance(c[1], (int, float)))
    
    # Ajouter ligne total
    charges.append(["", "", ""])
    charges.append(["TOTAL CHARGES", total_charges, ""])
    
    # Afficher tableau
    headers = ["Poste", "Montant (‚Ç¨)", "Note"]
    print(tabulate(charges, headers=headers, tablefmt="grid", floatfmt=".0f"))
    
    # Calcul avec salaire dirigeant
    print("\nüìä ANALYSE AVEC SALAIRE DIRIGEANT")
    print("-" * 60)
    
    salaire_net = 3000
    charges_patronales = salaire_net * 0.454  # 45.4% charges patronales
    charges_salariales = salaire_net * 0.228  # 22.8% charges salariales TNS
    cout_total_salaire = salaire_net + charges_patronales + charges_salariales
    
    print(f"  Salaire net souhait√© : {salaire_net:>10.0f}‚Ç¨")
    print(f"  Charges patronales    : {charges_patronales:>10.0f}‚Ç¨")
    print(f"  Charges salariales    : {charges_salariales:>10.0f}‚Ç¨")
    print(f"  Co√ªt total salaire    : {cout_total_salaire:>10.0f}‚Ç¨")
    print(f"  " + "-"*40)
    print(f"  BESOIN TOTAL MENSUEL  : {total_charges + cout_total_salaire:>10.0f}‚Ç¨")
    
    # Projection septembre
    print("\nüìÖ PROJECTION SEPTEMBRE 2025")
    print("-" * 60)
    
    charges_septembre = total_charges - 1618  # Fin pr√™t Riverbank
    print(f"  Charges apr√®s fin pr√™t: {charges_septembre:>10.0f}‚Ç¨")
    print(f"  Avec salaire dirigeant: {charges_septembre + cout_total_salaire:>10.0f}‚Ç¨")
    
    # Analyse par cat√©gorie
    print("\nüìä R√âPARTITION PAR CAT√âGORIE")
    print("-" * 60)
    
    categories = {
        "Salaires & charges": 8600,
        "Immobilier": 1000,
        "Financements": 2204,
        "Services IT": 1260,
        "Assurances": 810,
        "T√©l√©coms": 193,
        "Services divers": 39,
        "Comptabilit√©": 340,
        "Transport": 103
    }
    
    for cat, montant in sorted(categories.items(), key=lambda x: x[1], reverse=True):
        pct = (montant / total_charges) * 100
        print(f"  {cat:<20} : {montant:>7.0f}‚Ç¨ ({pct:>5.1f}%)")
    
    # Points d'attention
    print("\n‚ö†Ô∏è POINTS D'ATTENTION")
    print("-" * 60)
    print("  ‚Ä¢ Pr√™t Riverbank se termine le 31/08/2025 (-1,618‚Ç¨/mois)")
    print("  ‚Ä¢ URSSAF inclut du rattrapage (normal: 2,591‚Ç¨ apr√®s r√©gularisation)")
    print("  ‚Ä¢ Freebox non visible dans Qonto (pr√©l√®vement autre compte ?)")
    print("  ‚Ä¢ DOUGS varie entre 193‚Ç¨ et 271‚Ç¨ selon les mois")
    
    return total_charges

if __name__ == "__main__":
    total = afficher_tableau_charges()
    
    print("\n" + "="*80)
    print("üí° CONCLUSION")
    print("="*80)
    print(f"""
    Charges mensuelles actuelles : {total:,.0f}‚Ç¨
    Objectif salaire net         : 3,000‚Ç¨
    Besoin CA mensuel total      : 20,059‚Ç¨
    
    D√®s septembre (fin pr√™t)     : 18,441‚Ç¨/mois n√©cessaires
    
    üìà Opportunit√©s identifi√©es:
    ‚Ä¢ UAI Phase 1: 21k‚Ç¨ (5 mois)
    ‚Ä¢ PHARMABEST: 85k‚Ç¨ potentiel
    ‚Ä¢ LAA GPU: 4.5k‚Ç¨ apr√®s test
    """)
    
    print("\n‚úÖ Analyse termin√©e et sauvegard√©e")