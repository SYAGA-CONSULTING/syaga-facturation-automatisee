#!/usr/bin/env python3
"""
G√âN√âRATION MOCKUPS FACTURES avec ReportLab direct
"""

import sys
import os
from datetime import datetime

sys.path.append('/home/sq/SYAGA-CONSULTING/syaga-instructions')
from SEND_EMAIL_SECURE import send_email

from reportlab.lib.pagesizes import A4
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import cm
from reportlab.lib import colors
from reportlab.lib.enums import TA_CENTER, TA_LEFT, TA_RIGHT

def create_facture_pdf(facture_data, filename):
    """Cr√©e un PDF de facture mockup avec ReportLab direct"""
    
    # Document
    doc = SimpleDocTemplate(
        filename,
        pagesize=A4,
        rightMargin=2*cm,
        leftMargin=2*cm,
        topMargin=2*cm,
        bottomMargin=2*cm,
        title=f"Facture {facture_data['numero']}",
        author="SYAGA CONSULTING"
    )
    
    # Styles
    styles = getSampleStyleSheet()
    
    title_style = ParagraphStyle(
        'Title',
        parent=styles['Title'],
        fontSize=24,
        textColor=colors.HexColor('#2c3e50'),
        spaceAfter=10,
        alignment=TA_CENTER,
        fontName='Helvetica-Bold'
    )
    
    invoice_number_style = ParagraphStyle(
        'InvoiceNumber',
        parent=styles['Normal'],
        fontSize=18,
        textColor=colors.HexColor('#e74c3c'),
        spaceAfter=20,
        alignment=TA_CENTER,
        fontName='Helvetica-Bold'
    )
    
    header_style = ParagraphStyle(
        'Header',
        parent=styles['Normal'],
        fontSize=12,
        textColor=colors.HexColor('#34495e'),
        spaceAfter=8,
        fontName='Helvetica-Bold'
    )
    
    normal_style = ParagraphStyle(
        'Normal',
        parent=styles['Normal'],
        fontSize=10,
        textColor=colors.black,
        spaceAfter=6,
        fontName='Helvetica'
    )
    
    # Contenu
    story = []
    
    # En-t√™te principale
    story.append(Paragraph("SYAGA CONSULTING", title_style))
    story.append(Paragraph(f"FACTURE {facture_data['numero']}", invoice_number_style))
    story.append(Paragraph(f"Date d'√©mission : 31/07/2025", normal_style))
    story.append(Spacer(1, 20))
    
    # Informations √©metteur/client en tableau
    info_data = [
        ['√âMETTEUR', 'CLIENT'],
        [
            '''SYAGA CONSULTING SARL
S√©bastien QUESTIER
[Adresse √©metteur]
SIRET : [√Ä compl√©ter]
TVA : FR[√Ä compl√©ter]
sebastien.questier@syaga.fr''',
            f'''{facture_data['client_nom']}
Code OXYGEN : {facture_data['code_oxygen']}
{facture_data['adresse']}
{facture_data.get('email', '')}'''
        ]
    ]
    
    info_table = Table(info_data, colWidths=[8*cm, 8*cm])
    info_table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#34495e')),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
        ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
        ('FONTSIZE', (0, 0), (-1, 0), 12),
        ('ALIGN', (0, 0), (-1, 0), 'CENTER'),
        ('BACKGROUND', (0, 1), (-1, 1), colors.HexColor('#ecf0f1')),
        ('VALIGN', (0, 0), (-1, -1), 'TOP'),
        ('GRID', (0, 0), (-1, -1), 1, colors.black),
        ('LEFTPADDING', (0, 1), (-1, 1), 10),
        ('RIGHTPADDING', (0, 1), (-1, 1), 10),
        ('TOPPADDING', (0, 1), (-1, 1), 10),
        ('BOTTOMPADDING', (0, 1), (-1, 1), 10)
    ]))
    
    story.append(info_table)
    story.append(Spacer(1, 30))
    
    # Tableau des prestations
    story.append(Paragraph("D√âTAIL DES PRESTATIONS", header_style))
    story.append(Spacer(1, 10))
    
    presta_data = [
        ['D√©signation', 'Quantit√©', 'Prix Unit. HT', 'Total HT'],
        [
            facture_data['designation'],
            facture_data['quantite'],
            facture_data['prix_unit'],
            facture_data['total_ht']
        ]
    ]
    
    presta_table = Table(presta_data, colWidths=[8*cm, 2.5*cm, 2.5*cm, 3*cm])
    presta_table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.HexColor('#3498db')),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
        ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
        ('FONTSIZE', (0, 0), (-1, 0), 11),
        ('ALIGN', (0, 0), (-1, 0), 'CENTER'),
        ('ALIGN', (1, 1), (-1, -1), 'RIGHT'),  # Colonnes num√©riques √† droite
        ('ALIGN', (0, 1), (0, -1), 'LEFT'),   # D√©signation √† gauche
        ('BACKGROUND', (0, 1), (-1, -1), colors.HexColor('#f8f9fa')),
        ('GRID', (0, 0), (-1, -1), 1, colors.black),
        ('VALIGN', (0, 0), (-1, -1), 'MIDDLE'),
        ('LEFTPADDING', (0, 0), (-1, -1), 8),
        ('RIGHTPADDING', (0, 0), (-1, -1), 8),
        ('TOPPADDING', (0, 0), (-1, -1), 8),
        ('BOTTOMPADDING', (0, 0), (-1, -1), 8)
    ]))
    
    story.append(presta_table)
    story.append(Spacer(1, 25))
    
    # Totaux
    tva_rate = facture_data.get('tva_rate', 0.20)
    total_ht_val = float(facture_data['total_ht'].replace('‚Ç¨', '').replace(' ', '').replace(',', '.').replace('.', ''))
    if '.' in facture_data['total_ht']:
        # Format 2.700,00 -> 2700
        total_ht_val = total_ht_val / 100
    
    tva_montant = total_ht_val * tva_rate
    total_ttc = total_ht_val * (1 + tva_rate)
    
    totaux_data = [
        ['Total HT :', f'{total_ht_val:.2f}‚Ç¨'],
        [f'TVA {facture_data.get("tva_label", "20%")} :', f'{tva_montant:.2f}‚Ç¨'],
        ['TOTAL TTC :', f'{total_ttc:.2f}‚Ç¨']
    ]
    
    totaux_table = Table(totaux_data, colWidths=[12*cm, 4*cm])
    totaux_table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, -2), colors.HexColor('#e8f4f8')),
        ('BACKGROUND', (0, -1), (-1, -1), colors.HexColor('#3498db')),
        ('TEXTCOLOR', (0, -1), (-1, -1), colors.whitesmoke),
        ('FONTNAME', (0, -1), (-1, -1), 'Helvetica-Bold'),
        ('FONTSIZE', (0, -1), (-1, -1), 12),
        ('ALIGN', (0, 0), (-1, -1), 'RIGHT'),
        ('GRID', (0, 0), (-1, -1), 1, colors.black),
        ('LEFTPADDING', (0, 0), (-1, -1), 10),
        ('RIGHTPADDING', (0, 0), (-1, -1), 10),
        ('TOPPADDING', (0, 0), (-1, -1), 8),
        ('BOTTOMPADDING', (0, 0), (-1, -1), 8)
    ]))
    
    story.append(totaux_table)
    story.append(Spacer(1, 30))
    
    # Conditions
    conditions_text = f"""
<b>CONDITIONS DE R√àGLEMENT :</b><br/>
‚Ä¢ Paiement √† 30 jours par virement bancaire<br/>
‚Ä¢ RIB disponible sur demande<br/>
‚Ä¢ P√©nalit√©s de retard : 3 fois le taux l√©gal<br/>
‚Ä¢ Indemnit√© forfaitaire pour frais de recouvrement : 40‚Ç¨<br/>
{facture_data.get('mention_legale', '')}
    """
    story.append(Paragraph(conditions_text, normal_style))
    story.append(Spacer(1, 20))
    
    # Footer
    footer_text = f"""
<i>Facture g√©n√©r√©e automatiquement le {datetime.now().strftime('%d/%m/%Y √† %H:%M')}</i><br/>
<i>SYAGA CONSULTING - Expertise informatique et conseil</i>
    """
    story.append(Paragraph(footer_text, normal_style))
    
    try:
        doc.build(story)
        return os.path.exists(filename)
    except Exception as e:
        print(f"‚ùå Erreur cr√©ation facture: {e}")
        return False

def main():
    print("üìÑ G√âN√âRATION MOCKUPS FACTURES - REPORTLAB DIRECT")
    print("="*70)
    
    # Donn√©es des factures principales
    factures_data = [
        {
            'numero': 'F20250001',
            'client_nom': 'LES AUTOMATISMES APPLIQUES',
            'code_oxygen': 'LAA01',
            'adresse': 'Bat.C Parc de Bachasson\n13590 MEYREUIL',
            'email': 'bm@laa.fr',
            'designation': 'Dette technologique - Prestations informatiques Juillet 2025',
            'quantite': '27,00 heures',
            'prix_unit': '100,00‚Ç¨',
            'total_ht': '2.700,00‚Ç¨',
            'tva_rate': 0.20,
            'tva_label': '20%'
        },
        {
            'numero': 'F20250002',
            'client_nom': 'LES AUTOMATISMES APPLIQUES',
            'code_oxygen': 'LAA01',
            'adresse': 'Bat.C Parc de Bachasson\n13590 MEYREUIL',
            'email': 'bm@laa.fr',
            'designation': 'Tests automatis√©s - Prestations informatiques Juillet 2025',
            'quantite': '21,50 heures',
            'prix_unit': '100,00‚Ç¨',
            'total_ht': '2.150,00‚Ç¨',
            'tva_rate': 0.20,
            'tva_label': '20%'
        },
        {
            'numero': 'F20250003',
            'client_nom': 'LES AUTOMATISMES APPLIQUES',
            'code_oxygen': 'LAA01',
            'adresse': 'Bat.C Parc de Bachasson\n13590 MEYREUIL',
            'email': 'bm@laa.fr',
            'designation': 'D√©veloppements sp√©cifiques - Prestations informatiques Juillet 2025',
            'quantite': '9,00 heures',
            'prix_unit': '100,00‚Ç¨',
            'total_ht': '900,00‚Ç¨',
            'tva_rate': 0.20,
            'tva_label': '20%'
        },
        {
            'numero': 'F20250004',
            'client_nom': 'LES AUTOMATISMES APPLIQUES',
            'code_oxygen': 'LAA01',
            'adresse': 'Bat.C Parc de Bachasson\n13590 MEYREUIL',
            'email': 'bm@laa.fr',
            'designation': 'Maintenance hors forfait - Prestations informatiques Juillet 2025',
            'quantite': '5,00 heures',
            'prix_unit': '100,00‚Ç¨',
            'total_ht': '500,00‚Ç¨',
            'tva_rate': 0.20,
            'tva_label': '20%'
        },
        {
            'numero': 'F20250005',
            'client_nom': 'LAA MAROC',
            'code_oxygen': 'LAAM01',
            'adresse': 'TFZ, Centre Affaires NORDAMI\n90000 TANGER - MAROC',
            'email': 'delicata@laa-ogs.com',
            'designation': 'Maintenance informatique - Juillet 2025',
            'quantite': '1,50 heures',
            'prix_unit': '100,00‚Ç¨',
            'total_ht': '150,00‚Ç¨',
            'tva_rate': 0,
            'tva_label': '0% (Exon√©ration)',
            'mention_legale': '<br/><b>Exon√©ration de TVA en vertu des dispositions de l\'article 259 B du CGI</b>'
        },
        {
            'numero': 'F20250006',
            'client_nom': 'UN AIR D\'ICI',
            'code_oxygen': '1AIR01',
            'adresse': '850 chemin de Villefranche\n84200 CARPENTRAS',
            'designation': 'HardenAD - Prestations informatiques Juillet 2025',
            'quantite': '5,50 heures',
            'prix_unit': '850,00‚Ç¨',
            'total_ht': '4.675,00‚Ç¨',
            'tva_rate': 0.20,
            'tva_label': '20%'
        },
        {
            'numero': 'F20250007',
            'client_nom': 'UN AIR D\'ICI',
            'code_oxygen': '1AIR01',
            'adresse': '850 chemin de Villefranche\n84200 CARPENTRAS',
            'designation': 'SQL Server - Prestations informatiques Juillet 2025',
            'quantite': '9,00 heures',
            'prix_unit': '850,00‚Ç¨',
            'total_ht': '7.650,00‚Ç¨',
            'tva_rate': 0.20,
            'tva_label': '20%'
        },
        {
            'numero': 'F20250008',
            'client_nom': 'AIXAGON',
            'code_oxygen': 'AIX01',
            'adresse': '5 Mont√©e de Baume\n13124 PEYPIN',
            'email': 'sabinec@aixagon.fr',
            'designation': 'Prestations informatiques - Juillet 2025\n(Client final : Mairie Port de Bouc)',
            'quantite': '4,00 heures',
            'prix_unit': '100,00‚Ç¨',
            'total_ht': '400,00‚Ç¨',
            'tva_rate': 0.20,
            'tva_label': '20%'
        }
    ]
    
    # G√©n√©ration
    pdf_dir = "/home/sq/SYAGA-CONSULTING/syaga-finance-api/facturation-automatisee/reports/pdf-factures"
    os.makedirs(pdf_dir, exist_ok=True)
    
    generated_pdfs = []
    
    print(f"\nüìÑ G√©n√©ration de {len(factures_data)} mockups factures...")
    
    for facture in factures_data:
        filename = f"{pdf_dir}/FACTURE_{facture['numero']}_{facture['code_oxygen']}_MOCKUP.pdf"
        
        if create_facture_pdf(facture, filename):
            file_size = os.path.getsize(filename)
            print(f"  ‚úÖ {facture['numero']}: {file_size} bytes")
            generated_pdfs.append(filename)
        else:
            print(f"  ‚ùå {facture['numero']}: √âchec")
    
    # Validation
    valid_pdfs = []
    print(f"\nüîç Validation ({len(generated_pdfs)} factures)...")
    
    for pdf_path in generated_pdfs:
        file_size = os.path.getsize(pdf_path)
        facture_num = os.path.basename(pdf_path).split('_')[1]
        
        if file_size > 4000:  # Factures plus complexes que rapports
            print(f"  ‚úÖ {facture_num}: {file_size} bytes - VALIDE")
            valid_pdfs.append(pdf_path)
        else:
            print(f"  ‚ùå {facture_num}: {file_size} bytes - TROP PETIT")
    
    # Envoi
    if valid_pdfs:
        print(f"\nüìß Envoi de {len(valid_pdfs)} mockups factures...")
        
        html_body = f"""
        <h1>üìÑ MOCKUPS FACTURES JUILLET 2025 - REPORTLAB</h1>
        
        <div style="background: #e8f4f8; padding: 25px; border: 3px solid #3498db; margin: 20px 0;">
            <h2>‚úÖ {len(valid_pdfs)} FACTURES MOCKUP G√âN√âR√âES</h2>
            <ul>
                <li><strong>M√©thode :</strong> ReportLab direct (m√™me que rapports Clockify)</li>
                <li><strong>Format :</strong> Factures professionnelles compl√®tes</li>
                <li><strong>Validation :</strong> Taille > 4KB (contenu riche)</li>
                <li><strong>Contenu :</strong> En-t√™te, client, prestations, totaux, conditions</li>
            </ul>
        </div>
        
        <h3>üìã Factures g√©n√©r√©es :</h3>
        <ul>
            <li><strong>F20250001-004 :</strong> LAA France (4 factures s√©par√©es par cat√©gorie)</li>
            <li><strong>F20250005 :</strong> LAA Maroc (TVA 0%)</li>
            <li><strong>F20250006-007 :</strong> UAI (HardenAD + SQL Server, 850‚Ç¨/h)</li>
            <li><strong>F20250008 :</strong> AIXAGON (Port de Bouc)</li>
        </ul>
        
        <h3>üí∞ Totaux factures :</h3>
        <ul>
            <li><strong>LAA France :</strong> 6.250‚Ç¨ HT (4 factures)</li>
            <li><strong>LAA Maroc :</strong> 150‚Ç¨ HT (TVA 0%)</li>
            <li><strong>UAI :</strong> 12.325‚Ç¨ HT (expertise 850‚Ç¨/h)</li>
            <li><strong>AIXAGON :</strong> 400‚Ç¨ HT</li>
            <li><strong>TOTAL :</strong> 19.125‚Ç¨ HT</li>
        </ul>
        
        <div style="background: #d4edda; padding: 15px; border-left: 5px solid #27ae60; margin: 20px 0;">
            <h3>üéØ CES MOCKUPS MONTRENT :</h3>
            <p><strong>‚úÖ Mise en forme professionnelle</strong> - En-t√™tes, tableaux, totaux</p>
            <p><strong>‚úÖ Codes OXYGEN corrects</strong> - 1AIR01, LAAM01, AIX01, etc.</p>
            <p><strong>‚úÖ TVA g√©r√©e</strong> - 20% standard, 0% Maroc</p>
            <p><strong>‚úÖ Conformit√©</strong> - Conditions, mentions l√©gales</p>
        </div>
        
        <p><strong>üìÅ R√©pertoire :</strong> {pdf_dir}</p>
        
        <p style="color: #3498db; font-weight: bold; font-size: 16px;">
        üìÑ MOCKUPS PR√äTS POUR VALIDATION ET G√âN√âRATION D√âFINITIVE !
        </p>
        """
        
        result = send_email(
            to_email="sebastien.questier@syaga.fr",
            subject=f"üìÑ MOCKUPS FACTURES JUILLET 2025 - {len(valid_pdfs)} PDF G√âN√âR√âS",
            html_body=html_body,
            pdf_paths=valid_pdfs
        )
        
        if result:
            print("‚úÖ EMAIL ENVOY√â AVEC MOCKUPS FACTURES!")
        else:
            print("‚ùå Erreur envoi email")
    
    else:
        print("‚ùå Aucune facture valide √† envoyer")
    
    print(f"\n" + "="*70)
    print(f"‚úÖ G√âN√âRATION TERMIN√âE - {len(valid_pdfs)} mockups factures envoy√©s")
    
    return valid_pdfs

if __name__ == "__main__":
    pdfs = main()